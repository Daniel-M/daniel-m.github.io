<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ParallelProgramming on Daniel Mejía Raigosa</title>
    <link>https://daniel-m.github.io/tags/parallelprogramming/</link>
    <description>Recent content in ParallelProgramming on Daniel Mejía Raigosa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 22 Mar 2018 21:53:32 -0500</lastBuildDate><atom:link href="https://daniel-m.github.io/tags/parallelprogramming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Python multiprocessing</title>
      <link>https://daniel-m.github.io/2018/03/notes-on-python-multiprocessing/</link>
      <pubDate>Thu, 22 Mar 2018 21:53:32 -0500</pubDate>
      
      <guid>https://daniel-m.github.io/2018/03/notes-on-python-multiprocessing/</guid>
      <description>multiprocessing is a package that supports spawning processes using an API similar to the threading module.[1] The Pool object which offers a convenient means of parallelizing the execution of a function across multiple input values, distributing the input data across processes (data parallelism).[1] One should protect the “entry point” of the program by using if __name__ == &#39;__main__&#39; this line is mandatory. One of the simplest ways of show the use of multi processing is,</description>
    </item>
    
  </channel>
</rss>
